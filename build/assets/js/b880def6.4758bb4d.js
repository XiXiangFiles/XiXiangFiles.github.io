"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[560],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>h});var r=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function m(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=r.createContext({}),l=function(e){var a=r.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},p=function(e){var a=l(e.components);return r.createElement(o.Provider,{value:a},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,p=m(e,["components","mdxType","originalType","parentName"]),c=l(t),u=n,h=c["".concat(o,".").concat(u)]||c[u]||d[u]||s;return t?r.createElement(h,i(i({ref:a},p),{},{components:t})):r.createElement(h,i({ref:a},p))}));function h(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var s=t.length,i=new Array(s);i[0]=u;var m={};for(var o in a)hasOwnProperty.call(a,o)&&(m[o]=a[o]);m.originalType=e,m[c]="string"==typeof e?e:n,i[1]=m;for(var l=2;l<s;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},990:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>m,toc:()=>l});var r=t(7462),n=(t(7294),t(3905));const s={title:"Ambassador pattern with Shared Database Pattern",description:"In Micro-Service architecture, the shared database pattern is popular. It does not let a service maintain a database by itself, instead of sharing the database between services. Because of the query issues and scalability issues such as Query, multiple data from multiple services and sometimes must do replication or sharded pattern",keywords:["architecture pattern","microservice","database","ambassador pattern"],sidebar_position:4},i="Ambassador pattern with Shared Database Pattern",m={unversionedId:"patterns/2022.11.16.ambassador_pattern",id:"patterns/2022.11.16.ambassador_pattern",title:"Ambassador pattern with Shared Database Pattern",description:"In Micro-Service architecture, the shared database pattern is popular. It does not let a service maintain a database by itself, instead of sharing the database between services. Because of the query issues and scalability issues such as Query, multiple data from multiple services and sometimes must do replication or sharded pattern",source:"@site/docs/patterns/2022.11.16.ambassador_pattern.md",sourceDirName:"patterns",slug:"/patterns/2022.11.16.ambassador_pattern",permalink:"/docs/patterns/2022.11.16.ambassador_pattern",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Ambassador pattern with Shared Database Pattern",description:"In Micro-Service architecture, the shared database pattern is popular. It does not let a service maintain a database by itself, instead of sharing the database between services. Because of the query issues and scalability issues such as Query, multiple data from multiple services and sometimes must do replication or sharded pattern",keywords:["architecture pattern","microservice","database","ambassador pattern"],sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Backend System in Microservice Architecture: Where Does data store",permalink:"/docs/patterns/2022.06.17.how_microservice_data_store"},next:{title:"09.24.introduce_vvl",permalink:"/docs/patterns/09.24.introduce_vvl"}},o={},l=[{value:"Force points",id:"force-points",level:2},{value:"Structure",id:"structure",level:2},{value:"Pros and Cons:",id:"pros-and-cons",level:2},{value:"Experiments",id:"experiments",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"Reference",id:"reference",level:2}],p={toc:l},c="wrapper";function d(e){let{components:a,...s}=e;return(0,n.kt)(c,(0,r.Z)({},p,s,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"ambassador-pattern-with-shared-database-pattern"},"Ambassador pattern with Shared Database Pattern"),(0,n.kt)("p",null,"In Micro-Service architecture, the shared database pattern is popular. It does not let a service maintain a database by itself, instead of sharing the database between services. Because of the query issues and scalability issues such as Query, multiple data from multiple services and sometimes must do replication or sharded pattern ","[1]",". But there are some force points in shared database pattern:"),(0,n.kt)("h2",{id:"force-points"},"Force points"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Wasting Database Connection: ",(0,n.kt)("br",null),"\nThe container connecting the database directly is not enough efficient, because the container does not access frequency. It always has idle time, but the database connection is precious","[2]","."),(0,n.kt)("li",{parentName:"ol"},"The Database Connections have limits:",(0,n.kt)("br",null),"\nIt has a max connection count for a single node database, especially the RDBMS that only supports vertical scalability. ex: Microsoft Azure has a form to list the connection counts in each node and has different prices","[3]","."),(0,n.kt)("li",{parentName:"ol"},"Security Issues: ",(0,n.kt)("br",null),"\nEach Container must access database so that is difficult to manage all implementation are safe.")),(0,n.kt)("h2",{id:"structure"},"Structure"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Static Structure ",(0,n.kt)("br",null),"\nInternal service can access the database through Ambassador that can call the database service. In this way, the loading of the database shrift to the Ambassador because the Ambassador concrete the access demand from internal service.\nSuggestions: ",(0,n.kt)("br",null))),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Internal service access Ambassador with gRPC is better.\ngRPC is an efficient tool that is based on HTTP2 and can compress a lot of connections into one connection. gRPC use protobuf that is convenient to export access interface to the others service."),(0,n.kt)("li",{parentName:"ol"},"Ambassador and database should bind in the same pod","[4]",".")),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(2823).Z,width:"385",height:"335"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Dynamic Structure")),(0,n.kt)("p",null,"There are two phases on dynamic structure.\n",(0,n.kt)("strong",{parentName:"p"},"Init Phase"),(0,n.kt)("br",null),"\nIn this phase, the Ambassador builds a long-term connection to the database and internal services build a long-term connection to Ambassador.",(0,n.kt)("br",null),"\n",(0,n.kt)("strong",{parentName:"p"},"Interactive Phase"),(0,n.kt)("br",null),"\nThe ambassador is a middleware for the internal service access database that passes the command or queries to the database and then passes the result back",(0,n.kt)("br",null)),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(8253).Z,width:"440",height:"441"})),(0,n.kt)("h2",{id:"pros-and-cons"},"Pros and Cons:"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Pros"),(0,n.kt)("br",null)),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Reduce the database connection pressure"),(0,n.kt)("li",{parentName:"ul"},"Provide a uniform interface for accessing the database to reduce duplicated implementation"),(0,n.kt)("li",{parentName:"ul"},"More efficient to use a database connection"),(0,n.kt)("li",{parentName:"ul"},"Safer than every service can directly access"),(0,n.kt)("li",{parentName:"ul"},"More easier add cache data ")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Cons"),(0,n.kt)("br",null)),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The access time will increase than no ambassador access time")),(0,n.kt)("h2",{id:"experiments"},"Experiments"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Hardware: m1 pro cpu (8 core), 16 GB RAM and 512 SSD. ",(0,n.kt)("br",null),"\nEnvironments: MySQL(mysql:8.0.31), Application Run (golang:1.19.2-alpine3.16) in docker."),(0,n.kt)("li",{parentName:"ul"},"The Experiment Architecture: ",(0,n.kt)("br",null),"\nA internal service directly access and internal service access database through database.")),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(5361).Z,width:"560",height:"436"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The Experiment of measuring the query time\nIn the experiment, We want to know how different access between gRPC and direct access is. So that we measure a single time by 150000 times query with 1, 3, 6, 12, 24 and 48 workers in a single connector, and we take an average in 10 experiments.")),(0,n.kt)("p",null,(0,n.kt)("img",{src:t(946).Z,width:"1428",height:"942"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We found in the result:",(0,n.kt)("br",null),"\nIn this pattern, a bottleneck is gRPC throughput but can be solved by a replica node. It easily found the problem by the below formula that is a roundtrip of gRPC (query/response).")),(0,n.kt)("div",{className:"math math-display"},(0,n.kt)("span",{parentName:"div",className:"katex-display"},(0,n.kt)("span",{parentName:"span",className:"katex"},(0,n.kt)("span",{parentName:"span",className:"katex-mathml"},(0,n.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,n.kt)("semantics",{parentName:"math"},(0,n.kt)("mrow",{parentName:"semantics"},(0,n.kt)("mi",{parentName:"mrow"},"Q"),(0,n.kt)("mi",{parentName:"mrow"},"u"),(0,n.kt)("mi",{parentName:"mrow"},"e"),(0,n.kt)("mi",{parentName:"mrow"},"r"),(0,n.kt)("mi",{parentName:"mrow"},"y"),(0,n.kt)("mi",{parentName:"mrow"},"T"),(0,n.kt)("mi",{parentName:"mrow"},"i"),(0,n.kt)("mi",{parentName:"mrow"},"m"),(0,n.kt)("mi",{parentName:"mrow"},"e"),(0,n.kt)("mo",{parentName:"mrow"},"="),(0,n.kt)("mi",{parentName:"mrow"},"g"),(0,n.kt)("mi",{parentName:"mrow"},"r"),(0,n.kt)("mi",{parentName:"mrow"},"p"),(0,n.kt)("mi",{parentName:"mrow"},"c"),(0,n.kt)("mi",{parentName:"mrow"},"T"),(0,n.kt)("mi",{parentName:"mrow"},"i"),(0,n.kt)("mi",{parentName:"mrow"},"m"),(0,n.kt)("mi",{parentName:"mrow"},"e"),(0,n.kt)("mo",{parentName:"mrow"},"\u2217"),(0,n.kt)("mn",{parentName:"mrow"},"2"),(0,n.kt)("mo",{parentName:"mrow"},"+"),(0,n.kt)("mi",{parentName:"mrow"},"d"),(0,n.kt)("mi",{parentName:"mrow"},"b"),(0,n.kt)("mi",{parentName:"mrow"},"Q"),(0,n.kt)("mi",{parentName:"mrow"},"u"),(0,n.kt)("mi",{parentName:"mrow"},"e"),(0,n.kt)("mi",{parentName:"mrow"},"r"),(0,n.kt)("mi",{parentName:"mrow"},"y"),(0,n.kt)("mi",{parentName:"mrow"},"T"),(0,n.kt)("mi",{parentName:"mrow"},"i"),(0,n.kt)("mi",{parentName:"mrow"},"m"),(0,n.kt)("mi",{parentName:"mrow"},"e")),(0,n.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"QueryTime = grpcTime*2 + dbQueryTime")))),(0,n.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,n.kt)("span",{parentName:"span",className:"base"},(0,n.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"Q"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"u"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"ery"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"T"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"im"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,n.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,n.kt)("span",{parentName:"span",className:"mrel"},"="),(0,n.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,n.kt)("span",{parentName:"span",className:"base"},(0,n.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"c"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"T"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"im"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,n.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,n.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,n.kt)("span",{parentName:"span",className:"base"},(0,n.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,n.kt)("span",{parentName:"span",className:"mord"},"2"),(0,n.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,n.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,n.kt)("span",{parentName:"span",className:"base"},(0,n.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"Q"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"u"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"ery"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"T"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"im"),(0,n.kt)("span",{parentName:"span",className:"mord mathnormal"},"e")))))),(0,n.kt)("h2",{id:"conclusion"},"Conclusion"),(0,n.kt)("p",null,"According to the result of the experiment, we can find the max gap time between direct access and through gRPC access is 0.0005 is a small value. If the speed wants to accelerate, only increase the replica node. So this pattern has horizon scalability and vertical scalability that can solve shared database pattern deployment problems only sacrificing a bit of performance."),(0,n.kt)("h2",{id:"reference"},"Reference"),(0,n.kt)("p",null,"[1]"," micro service pattern shared database pattern, ",(0,n.kt)("a",{parentName:"p",href:"https://microservices.io/patterns/data/shared-database.html"},"https://microservices.io/patterns/data/shared-database.html"),(0,n.kt)("br",null),"\n","[2]"," Fowler, Martin. Patterns of Enterprise Application Architecture: Pattern Enterpr Applica Arch. Addison-Wesley, 2012.",(0,n.kt)("br",null),"\n","[3]"," Limits in Azure Database for PostgreSQL - Single Server, ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/postgresql/single-server/concepts-limits"},"https://learn.microsoft.com/en-us/azure/postgresql/single-server/concepts-limits"),(0,n.kt)("br",null),"\n","[4]"," ambassador pattern, ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/architecture/patterns/ambassador"},"https://learn.microsoft.com/en-us/azure/architecture/patterns/ambassador"),(0,n.kt)("br",null)))}d.isMDXComponent=!0},2823:(e,a,t)=>{t.d(a,{Z:()=>r});const r=t.p+"assets/images/ambassador_pattern-410a5d03b9c910d04a067c55bb59297f.png"},8253:(e,a,t)=>{t.d(a,{Z:()=>r});const r=t.p+"assets/images/ambassador_seq-ac546ee5599798990cf2b9a3bbb391b0.png"},5361:(e,a,t)=>{t.d(a,{Z:()=>r});const r=t.p+"assets/images/component-d1e3060d3c6d717edb1ce97c842a0752.png"},946:(e,a,t)=>{t.d(a,{Z:()=>r});const r=t.p+"assets/images/exp-563f21ea1ca26b232bf082b499e6e9f9.png"}}]);